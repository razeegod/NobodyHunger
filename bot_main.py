import asyncio

import logging
import sys

from aiogram import Bot, Dispatcher, types
from aiogram.filters import CommandStart
from aiogram.types import Message
from aiogram import F
from aiogram.utils.formatting import (Bold, as_list, as_marked_section)

from token_data import TOKEN

from recipes_handler import router

dp = Dispatcher()
dp.include_router(router)

@dp.message(CommandStart())
async def start_handler(message: Message):
    keyboard_buttons = [
        [
            types.KeyboardButton(text="–ö–æ–º–∞–Ω–¥—ã"),
            types.KeyboardButton(text="–û–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞"),
        ]
    ]
    keyboard = types.ReplyKeyboardMarkup(keyboard=keyboard_buttons, resize_keyboard=True)

    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {message.from_user.full_name}! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?", reply_markup=keyboard)

@dp.message(F.text.lower() == "–∫–æ–º–∞–Ω–¥—ã")
async def commands_handler(message: Message):
    response = as_list(
        as_marked_section(
            Bold("–°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥: "),
            "/category_search_random 3 - –∑–∞–¥–∞—Å—Ç –Ω—É–∂–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ—Ü–µ–ø—Ç–æ–≤",
            marker=("üéÇ ")
        )
    )

    await message.answer(**response.as_kwargs())

@dp.message(F.text.lower() == "–æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞")
async def description_handler(message: Message):
    await message.answer("–ë–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–µ –æ—Å—Ç–∞–≤–∏—Ç –≥–æ–ª–æ–¥–Ω—ã–º –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç —Ä–∞–∑–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã!")

async def main():
    bot = Bot(TOKEN)
    await dp.start_polling(bot)


if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)
    asyncio.run(main())